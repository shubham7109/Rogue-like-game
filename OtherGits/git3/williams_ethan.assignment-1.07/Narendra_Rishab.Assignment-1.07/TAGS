
character.h,442
# define CHARACTER_H2,20
typedef enum kill_type 8,84
  kill_direct,9,109
  kill_avenged,10,124
  num_kill_types11,140
} kill_type_t;12,157
class character 14,173
  char symbol;character::symbol16,200
  pair_t position;character::position17,215
  int32_t speed;character::speed18,234
  uint32_t alive;character::alive19,251
  uint32_t sequence_number;character::sequence_number27,816
  uint32_t kills[character::kills28,844

dice.h,345
# define dice_H2,15
class dice4,32
   int base;dice::base7,57
   int number;dice::number8,70
   int sides;dice::sides9,85
    dice(dice::dice12,113
    dice(dice::dice14,158
    void setDice(dice::setDice16,246
    int getBase(dice::getBase23,397
    int getSides(dice::getSides27,447
    int getNumber(dice::getNumber31,499

dims.h,147
# define DIMS_H2,15
typedef enum dim 7,190
  dim_x,8,209
  dim_y,9,218
  num_dims10,227
} dim_t;11,238
typedef int16_t pair_t[pair_t13,248

dungeon.h,1808
# define DUNGEON_H2,18
#define DUNGEON_X 9,122
#define DUNGEON_Y 10,156
#define MIN_ROOMS 11,190
#define MAX_ROOMS 12,223
#define ROOM_MIN_X 13,256
#define ROOM_MIN_Y 14,289
#define ROOM_MAX_X 15,322
#define ROOM_MAX_Y 16,356
#define PC_VISUAL_RANGE 17,389
#define NPC_VISUAL_RANGE 18,422
#define PC_SPEED 19,456
#define MAX_MONSTERS 20,490
#define SAVE_DIR 21,524
#define DUNGEON_SAVE_FILE 22,565
#define DUNGEON_SAVE_SEMANTIC 23,606
#define DUNGEON_SAVE_VERSION 24,652
#define mappair(26,687
#define mapxy(27,744
#define hardnesspair(28,779
#define hardnessxy(29,846
#define charpair(30,891
#define charxy(31,959
typedef enum __attribute__ ((__packed__)) terrain_type 33,1006
  ter_debug,34,1063
  ter_unknown,35,1076
  ter_wall,36,1091
  ter_wall_immutable,37,1103
  ter_floor,38,1125
  ter_floor_room,39,1138
  ter_floor_hall,40,1156
  ter_stairs,41,1174
  ter_stairs_up,42,1188
  ter_stairs_down43,1205
} terrain_type_t;44,1223
typedef struct room 46,1242
  pair_t position;47,1264
  pair_t size;48,1283
} room_t;49,1298
class dungeon 53,1320
  uint32_t num_rooms;dungeon::num_rooms55,1345
  room_t *rooms;dungeon::rooms56,1367
  terrain_type_t map[dungeon::map57,1384
  uint8_t hardness[dungeon::hardness66,2037
  uint8_t pc_distance[dungeon::pc_distance67,2079
  uint8_t pc_tunnel[dungeon::pc_tunnel68,2124
  character *character_map[dungeon::character_map69,2167
  pc *PC;dungeon::PC70,2217
  heap_t events;dungeon::events71,2227
  uint16_t num_monsters;dungeon::num_monsters72,2244
  uint16_t max_monsters;dungeon::max_monsters73,2269
  uint32_t character_sequence_number;dungeon::character_sequence_number74,2294
  uint32_t time;dungeon::time80,2718
  uint32_t is_new;dungeon::is_new81,2735
  uint32_t quit;dungeon::quit82,2754

event.h,259
# define EVENT_H2,16
typedef enum event_type 8,79
  event_character_turn,9,105
} event_type_t;10,129
typedef struct event 12,146
  event_type_t type;13,169
  uint32_t time;14,190
  uint32_t sequence;15,207
    character *c;c17,238
} event_t;19,261

heap.c,1009
#undef min4,39
struct heap_node 6,51
  heap_node_t *next;next7,70
  heap_node_t *prev;prev8,91
  heap_node_t *parent;parent9,112
  heap_node_t *child;child10,135
  void *datum;datum11,157
  uint32_t degree;12,172
  uint32_t mark;13,191
#define splice_heap_node_lists(16,212
#define insert_heap_node_in_list(25,524
#define remove_heap_node_from_list(32,748
void print_heap_node(37,881
void print_heap(53,1203
void print_heap_node_list(70,1505
void heap_init(86,1704
void heap_node_delete(96,1940
void heap_delete(114,2244
heap_node_t *heap_insert(heap_insert125,2409
void *heap_peek_min(heap_peek_min145,2725
static void heap_link(150,2801
static void heap_consolidate(164,3123
void *heap_remove_min(heap_remove_min205,4056
int heap_combine(240,4590
static void heap_cut(269,5241
static void heap_cascading_cut(283,5522
int heap_decrease_key(297,5748
int heap_decrease_key_no_replace(311,5990
int32_t compare(335,6564
char *print_int(print_int340,6663
int main(349,6781

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

io.h,58
# define IO_H2,13
typedef struct dungeon dungeon_t;4,28

macros.h,611
# define MACROS_H2,17
#  define dprintf(16,213
#  define dfprintf(17,256
#  define dprintf(19,320
#  define dfprintf(20,343
# define fieldwidth(23,382
# define exit(37,1201
# define fopen(42,1441
#  define malloc(76,3348
#  define calloc(92,4430
#  define strdup(107,5435
#  define free(117,6055
# define swap(125,6303
# define memswap(131,6415
# define structdup(137,6543
# define datacmp(144,6927
# define max2(153,7400
# define min2(160,7576
# define max 167,7752
# define min 168,7770
# define max3(170,7789
# define min3(171,7830
# define frand(173,7872
# define structdup(180,7984

monster.h,1022
# define monster_H2,18
class monster 4,38
  int color;monster::color7,67
  std::string rarity;monster::rarity8,81
  std::string name;monster::name9,104
  std::string description;monster::description10,125
  char symbol;monster::symbol11,153
  std::vector<int>  abilities;monster::abilities12,169
  dice  damage;monster::damage13,201
  dice  hitpoints;monster::hitpoints14,218
  dice  speed;monster::speed15,238
  monster(monster::monster18,265
  monster(monster::monster20,380
  void set_monster(monster::set_monster22,710
  std::string get_rarity(monster::get_rarity36,1159
  int get_color(monster::get_color41,1216
  std::string get_name(monster::get_name46,1265
  std::string get_description(monster::get_description51,1320
  char get_symbol(monster::get_symbol56,1391
  std::vector<int> &get_abilities(monster::get_abilities61,1443
  dice &get_damage(monster::get_damage66,1514
  dice &get_hitpoints(monster::get_hitpoints71,1567
  dice &get_speed(monster::get_speed76,1627

move.h,21
# define MOVE_H2,15

npc.h,1190
# define NPC_H2,14
# define NPC_SMART 9,96
# define NPC_TELEPATH 10,134
# define NPC_TUNNEL 11,172
# define NPC_ERRATIC 12,210
# define NPC_BIT04 13,248
# define NPC_BIT05 14,286
# define NPC_BIT06 15,324
# define NPC_BIT07 16,362
# define NPC_BIT08 17,400
# define NPC_BIT09 18,438
# define NPC_BIT10 19,476
# define NPC_BIT11 20,514
# define NPC_BIT12 21,552
# define NPC_BIT13 22,590
# define NPC_BIT14 23,628
# define NPC_BIT15 24,666
# define NPC_BIT16 25,704
# define NPC_BIT17 26,742
# define NPC_BIT18 27,780
# define NPC_BIT19 28,818
# define NPC_BIT20 29,856
# define NPC_BIT21 30,894
# define NPC_BIT22 31,932
# define NPC_BIT23 32,970
# define NPC_BIT24 33,1008
# define NPC_BIT25 34,1046
# define NPC_BIT26 35,1084
# define NPC_BIT27 36,1122
# define NPC_BIT28 37,1160
# define NPC_BIT29 38,1198
# define NPC_BIT30 39,1236
# define NPC_BIT31 40,1274
# define has_characteristic(42,1313
typedef uint32_t npc_characteristics_t;45,1423
class npc 47,1464
  npc_characteristics_t characteristics;npc::characteristics49,1504
  uint32_t have_seen_pc;npc::have_seen_pc50,1545
  pair_t pc_last_known_position;npc::pc_last_known_position51,1570

path.h,93
# define PATH_H2,15
# define HARDNESS_PER_TURN 4,32
typedef struct dungeon dungeon_t;6,63

pc.h,131
# define PC_H2,13
class pc 10,116
  terrain_type_t known_terrain[pc::known_terrain12,155
  uint8_t visible[pc::visible13,209

utils.h,77
# define UTILS_H2,16
# define rand_under(6,147
# define rand_range(10,290
