My assignment achieved most of the assignment spec. It starts out by taking in a --nummon switch for the number of monsters. This number of monsters is then generated in generate_monsters() which randomly assigns attributes to each monster in a dungeon-sized matrix. From there each monster has a move generated for it based on their characteristics, done in the generate_move() function and aided by move_straight() and shortestPath() functions. Then the min is removed (the lowest turn value) and it has 3 options in an if-else statement. First, it could have a collision either with the player, in which case the game ends, or with another monster. I set the new space to the monster but had trouble eradicating the move for the consumed monster from the heap. The next option is if the next space is rock. If the rock can be tunneled through, the monster moves and the material turns to corridor. Otherwise, the hardness of the rock is decreased and the monster stays in its current position. Finally, the monster can move to another space with no significant event. After any of these three options if the pc moved distances are recalculated and the dungeon is rendered, then the monster's (or player's) move is reinserted into the heap and another min is pullled.
