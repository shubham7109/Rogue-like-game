My implementation of Djikstra's for distances from PC for tunneling and on-tunneling monsters follows the format of the 1.02 solution code. First, the PC is placed randomly in a room, then distances are calculated based on this point. For non-tunneling, the cost is set to INT_MAX to represent an infinite cost for every point. The point is then added to the heap if the hardness of the point is zero. The heap is then run through while there are points left inside it. For each node, all eight neighbors are checked to see if going through that node results in a lower cost. If the cost is lower (in this case the current node's cost plus one since the rooms and corridors have constant cost. After the heap is emptied the ast digit is printed to the console as per the assignment spec. For tunneling I use the same method save for the fact that everything not immutable is added and the cost from current node to next point is different based on the hardness of the node (values as per assignment spec). This is again printed after the heap is emptied.
