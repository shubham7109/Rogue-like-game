
character.c,54
void character_delete(9,117
uint32_t can_see(24,342

character.h,553
# define CHARACTER_H2,20
typedef struct dungeon dungeon_t;8,84
typedef struct npc npc_t;9,118
typedef struct pc pc_t;10,144
typedef struct dice_t dice_t;11,168
typedef enum kill_type 13,199
  kill_direct,14,224
  kill_avenged,15,239
  num_kill_types16,255
} kill_type_t;17,272
typedef struct character 19,288
  char symbol;20,315
  pair_t position;21,330
  int32_t speed;22,349
  uint32_t alive;23,366
  uint32_t sequence_number;31,931
  npc_t *npc;npc32,959
  pc_t *pc;pc33,973
  uint32_t kills[kills34,985
} character_t;35,1019

dims.h,147
# define DIMS_H2,15
typedef enum dim 7,190
  dim_x,8,209
  dim_y,9,218
  num_dims10,227
} dim_t;11,238
typedef int16_t pair_t[pair_t13,248

dungeon.c,1299
typedef struct corridor_path 15,242
  heap_node_t *hn;hn16,273
  uint8_t pos[pos17,292
  uint8_t from[from18,310
  int32_t cost;19,329
} corridor_path_t;20,345
static uint32_t in_room(22,365
static int32_t corridor_path_cmp(38,756
static void dijkstra_corridor(42,906
static void dijkstra_corridor_inv(141,4643
#define hardnesspair_inv(194,5965
static int connect_two_rooms(244,8602
static int create_cycle(263,9254
static int connect_rooms(305,10819
int gaussian[gaussian318,11012
typedef struct queue_node 326,11168
  int x,327,11196
  int x, y;327,11196
  struct queue_node *next;next328,11208
} queue_node_t;329,11235
static int smooth_hardness(331,11252
static int empty_dungeon(489,15528
static int place_rooms(509,15931
static int make_rooms(573,18456
static int place_stairs(596,19017
int gen_dungeon(618,19378
void render_dungeon(629,19519
void delete_dungeon(686,20625
void init_dungeon(693,20759
int write_dungeon_map(700,20916
int write_rooms(713,21145
uint32_t calculate_dungeon_size(733,21564
int write_dungeon(740,21786
int read_dungeon_map(799,23171
int read_rooms(822,23769
int calculate_num_rooms(852,24538
int read_dungeon(860,24778
int read_pgm(934,26479
void render_distance_map(1017,28604
void render_tunnel_distance_map(1050,29436

dungeon.h,1557
# define DUNGEON_H2,18
#define DUNGEON_X 9,122
#define DUNGEON_Y 10,157
#define MIN_ROOMS 11,192
#define MAX_ROOMS 12,226
#define ROOM_MIN_X 13,260
#define ROOM_MIN_Y 14,293
#define ROOM_MAX_X 15,326
#define ROOM_MAX_Y 16,360
#define VISUAL_RANGE 17,394
#define PC_SPEED 18,428
#define MAX_MONSTERS 19,462
#define SAVE_DIR 20,496
#define DUNGEON_SAVE_FILE 21,537
#define DUNGEON_SAVE_SEMANTIC 22,578
#define DUNGEON_SAVE_VERSION 23,624
#define mappair(25,659
#define mapxy(26,716
#define hardnesspair(27,751
#define hardnessxy(28,818
#define charpair(29,863
#define charxy(30,927
typedef enum __attribute__ ((__packed__)) terrain_type 32,970
  ter_debug,33,1027
  ter_wall,34,1040
  ter_wall_immutable,35,1052
  ter_floor,36,1074
  ter_floor_room,37,1087
  ter_floor_hall,38,1105
  ter_stairs_up,39,1123
  ter_stairs_down,40,1140
} terrain_type_t;41,1159
typedef struct room 43,1178
  pair_t position;44,1200
  pair_t size;45,1219
} room_t;46,1234
typedef struct character character_t;48,1245
typedef struct dungeon 50,1284
  uint32_t num_rooms;51,1309
  room_t *rooms;rooms52,1331
  terrain_type_t map[map53,1348
  uint8_t hardness[hardness62,2001
  uint8_t pc_distance[pc_distance63,2043
  uint8_t pc_tunnel[pc_tunnel64,2088
  character_t *character[character65,2131
  character_t pc;66,2179
  heap_t events;67,2197
  uint16_t num_monsters;68,2214
  uint16_t max_monsters;69,2239
  uint32_t character_sequence_number;70,2264
  uint32_t time;76,2688
  uint32_t control;77,2705
} dungeon_t;78,2725

event.c,178
static uint32_t next_event_number(4,43
int32_t compare_events(14,369
event_t *new_event(new_event25,689
event_t *update_event(update_event42,967
void event_delete(50,1115

event.h,307
# define EVENT_H2,16
typedef struct character character_t;8,79
typedef enum event_type 10,118
  event_character_turn,11,144
} event_type_t;12,168
typedef struct event 14,185
  event_type_t type;15,208
  uint32_t time;16,229
  uint32_t sequence;17,246
    character_t *c;c19,277
} event_t;21,302

heap.c,1009
#undef min4,39
struct heap_node 6,51
  heap_node_t *next;next7,70
  heap_node_t *prev;prev8,91
  heap_node_t *parent;parent9,112
  heap_node_t *child;child10,135
  void *datum;datum11,157
  uint32_t degree;12,172
  uint32_t mark;13,191
#define splice_heap_node_lists(16,212
#define insert_heap_node_in_list(25,524
#define remove_heap_node_from_list(32,748
void print_heap_node(37,881
void print_heap(53,1203
void print_heap_node_list(70,1505
void heap_init(86,1704
void heap_node_delete(96,1940
void heap_delete(114,2244
heap_node_t *heap_insert(heap_insert125,2409
void *heap_peek_min(heap_peek_min145,2725
static void heap_link(150,2801
static void heap_consolidate(164,3123
void *heap_remove_min(heap_remove_min205,4056
int heap_combine(240,4590
static void heap_cut(269,5241
static void heap_cascading_cut(283,5522
int heap_decrease_key(297,5748
int heap_decrease_key_no_replace(311,5990
int32_t compare(335,6564
char *print_int(print_int340,6663
int main(349,6781

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

macros.h,611
# define MACROS_H2,17
#  define dprintf(16,213
#  define dfprintf(17,256
#  define dprintf(19,320
#  define dfprintf(20,343
# define fieldwidth(23,382
# define exit(37,1201
# define fopen(42,1441
#  define malloc(76,3348
#  define calloc(92,4430
#  define strdup(107,5435
#  define free(117,6055
# define swap(125,6303
# define memswap(131,6415
# define structdup(137,6543
# define datacmp(144,6927
# define max2(153,7400
# define min2(160,7576
# define max 167,7752
# define min 168,7770
# define max3(170,7789
# define min3(171,7830
# define frand(173,7872
# define structdup(180,7984

move.c,194
void do_combat(17,250
void move_character(30,571
void do_moves(46,1052
void dir_nearest_wall(116,3237
uint32_t against_wall(128,3652
uint32_t in_corner(140,4140
uint32_t move_pc(158,4768

move.h,104
# define MOVE_H2,15
typedef struct dungeon dungeon_t;8,74
typedef struct character character_t;9,108

npc.c,1080
void npc_delete(12,173
static uint32_t max_monster_cells(19,232
void gen_monsters(33,479
void npc_next_pos_rand_tunnel(75,1853
    uint32_t i;79,1950
    uint8_t a[a80,1966
void npc_next_pos_rand(120,2712
    uint32_t i;124,2802
    uint8_t a[a125,2818
void npc_next_pos_line_of_sight(152,3277
void npc_next_pos_line_of_sight_tunnel(176,3977
void npc_next_pos_gradient(211,4796
static void npc_next_pos_00(334,9488
static void npc_next_pos_01(346,9885
static void npc_next_pos_02(364,10510
static void npc_next_pos_03(372,10820
static void npc_next_pos_04(378,10995
static void npc_next_pos_05(390,11399
static void npc_next_pos_06(408,12031
static void npc_next_pos_07(416,12348
static void npc_next_pos_08(422,12523
static void npc_next_pos_09(432,12764
static void npc_next_pos_0a(442,13005
static void npc_next_pos_0b(452,13246
static void npc_next_pos_0c(462,13487
static void npc_next_pos_0d(472,13735
static void npc_next_pos_0e(482,13983
static void npc_next_pos_0f(492,14231
void npc_next_pos(525,15131
uint32_t dungeon_has_npcs(533,15337

npc.h,1235
# define NPC_H2,14
# define NPC_SMART 8,72
# define NPC_TELEPATH 9,110
# define NPC_TUNNEL 10,148
# define NPC_ERRATIC 11,186
# define NPC_BIT04 12,224
# define NPC_BIT05 13,262
# define NPC_BIT06 14,300
# define NPC_BIT07 15,338
# define NPC_BIT08 16,376
# define NPC_BIT09 17,414
# define NPC_BIT10 18,452
# define NPC_BIT11 19,490
# define NPC_BIT12 20,528
# define NPC_BIT13 21,566
# define NPC_BIT14 22,604
# define NPC_BIT15 23,642
# define NPC_BIT16 24,680
# define NPC_BIT17 25,718
# define NPC_BIT18 26,756
# define NPC_BIT19 27,794
# define NPC_BIT20 28,832
# define NPC_BIT21 29,870
# define NPC_BIT22 30,908
# define NPC_BIT23 31,946
# define NPC_BIT24 32,984
# define NPC_BIT25 33,1022
# define NPC_BIT26 34,1060
# define NPC_BIT27 35,1098
# define NPC_BIT28 36,1136
# define NPC_BIT29 37,1174
# define NPC_BIT30 38,1212
# define NPC_BIT31 39,1250
# define has_characteristic(41,1289
typedef struct dungeon dungeon_t;44,1399
typedef struct character character_t;45,1433
typedef uint32_t npc_characteristics_t;46,1471
typedef struct npc 48,1512
  npc_characteristics_t characteristics;49,1533
  uint32_t have_seen_pc;50,1574
  pair_t pc_last_known_position;51,1599
} npc_t;53,1633

path.c,302
static dungeon_t *dungeon;dungeon12,633
typedef struct path 14,661
  heap_node_t *hn;hn15,683
  uint8_t pos[pos16,702
} path_t;17,720
static int32_t dist_cmp(19,731
static int32_t tunnel_cmp(26,1085
void dijkstra(33,1433
#define tunnel_movement_cost(143,5925
void dijkstra_tunnel(146,6062

path.h,60
# define PATH_H2,15
typedef struct dungeon dungeon_t;4,32

pc.c,208
void pc_delete(13,173
uint32_t pc_is_alive(20,233
void place_pc(25,295
void config_pc(35,722
uint32_t pc_next_pos(55,1140
int control_move(62,1308
void look_move(180,3680
uint32_t pc_in_room(203,4137

pc.h,99
# define PC_H2,13
typedef struct dungeon dungeon_t;8,70
typedef struct pc 10,105
} pc_t;11,125

rlg327.c,115
const char *victory victory12,176
const char *tombstone tombstone43,1747
void usage(64,2798
int main(75,3072

utils.c,25
int makedirectory(9,124

utils.h,77
# define UTILS_H2,16
# define rand_under(6,147
# define rand_range(10,290
